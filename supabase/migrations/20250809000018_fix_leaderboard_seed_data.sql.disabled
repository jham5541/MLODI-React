-- Add sample fan scores for testing
INSERT INTO fan_scores (
    user_id,
    artist_id,
    total_score,
    streaming_points,
    purchase_points,
    social_points,
    video_points,
    event_points,
    consecutive_days,
    fan_since,
    last_updated,
    created_at
)
SELECT 
    auth.uid(),  -- Replace with actual user ID
    id as artist_id,
    floor(random() * 10000 + 100)::integer as total_score,
    floor(random() * 1000)::integer as streaming_points,
    floor(random() * 500)::integer as purchase_points,
    floor(random() * 300)::integer as social_points,
    floor(random() * 200)::integer as video_points,
    floor(random() * 100)::integer as event_points,
    floor(random() * 30 + 1)::integer as consecutive_days,
    NOW() - (random() * interval '365 days') as fan_since,
    NOW() - (random() * interval '30 days') as last_updated,
    NOW() as created_at
FROM artists
WHERE EXISTS (SELECT 1 FROM auth.users LIMIT 1)  -- Only insert if there are users
ON CONFLICT (user_id, artist_id) DO UPDATE
SET 
    total_score = EXCLUDED.total_score,
    streaming_points = EXCLUDED.streaming_points,
    purchase_points = EXCLUDED.purchase_points,
    social_points = EXCLUDED.social_points,
    video_points = EXCLUDED.video_points,
    event_points = EXCLUDED.event_points,
    consecutive_days = EXCLUDED.consecutive_days,
    last_updated = EXCLUDED.last_updated;

-- Add sample reactions
INSERT INTO track_reactions (user_id, track_id, reaction_type)
SELECT 
    auth.uid(),  -- Replace with actual user ID
    id as track_id,
    (ARRAY['like', 'love', 'laugh', 'wow', 'sad', 'angry'])[floor(random() * 6 + 1)] as reaction_type
FROM songs
WHERE EXISTS (SELECT 1 FROM auth.users LIMIT 1)  -- Only insert if there are users
ON CONFLICT (user_id, track_id, reaction_type) DO NOTHING;

-- Add sample comments
INSERT INTO track_comments (user_id, track_id, comment)
SELECT 
    auth.uid(),  -- Replace with actual user ID
    id as track_id,
    'Sample comment ' || floor(random() * 100 + 1)::text as comment
FROM songs
WHERE EXISTS (SELECT 1 FROM auth.users LIMIT 1)  -- Only insert if there are users
LIMIT 50;  -- Add 50 sample comments
